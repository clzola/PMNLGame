/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package clzola.pmnlgame.client.gui;

import clzola.pmnlgame.client.ServerEndpoint;
import clzola.pmnlgame.client.ServerEndpointManager;
import com.alee.laf.WebLookAndFeel;
import javax.swing.JOptionPane;

/**
 *
 * @author Lazar
 */
public class ServerForm extends javax.swing.JDialog {

    /**
     * Creates new form ServerForm
     */
    public ServerForm(ServersListDialog parent, boolean modal, ServerEndpoint server) {
        super(parent, modal);
        initComponents();
        
        this.server = server;
        
        if( this.server != null ) {
            this.ServerName.setText(this.server.serverName);
            this.ServerAddress.setText(this.server.serverAddress);
            this.ServerAuthPort.setText(Integer.toString(this.server.authServerPort));
            this.ServerGamePort.setText(Integer.toString(this.server.gameServerPort));
        }
        
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setVisible(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ServerNameLabel = new javax.swing.JLabel();
        ServerAddressLabel = new javax.swing.JLabel();
        ServerAuthPortLabel = new javax.swing.JLabel();
        ServerName = new javax.swing.JTextField();
        ServerAddress = new javax.swing.JTextField();
        ServerAuthPort = new javax.swing.JTextField();
        ServerGamePortLabel = new javax.swing.JLabel();
        ServerGamePort = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        ServerNameLabel.setText("Server Name:");

        ServerAddressLabel.setText("Server Address:");

        ServerAuthPortLabel.setText("Server Auth Port:");

        ServerName.setPreferredSize(new java.awt.Dimension(192, 26));

        ServerAddress.setPreferredSize(new java.awt.Dimension(192, 26));

        ServerAuthPort.setPreferredSize(new java.awt.Dimension(64, 26));

        ServerGamePortLabel.setText("Server Game Port:");

        ServerGamePort.setPreferredSize(new java.awt.Dimension(64, 26));

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ServerName, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ServerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ServerAddressLabel)
                                    .addComponent(ServerAuthPortLabel)
                                    .addComponent(ServerNameLabel))
                                .addGap(8, 8, 8)
                                .addComponent(ServerAuthPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ServerGamePortLabel))
                            .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CancelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ServerGamePort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ServerNameLabel)
                    .addComponent(ServerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ServerAddressLabel)
                    .addComponent(ServerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ServerAuthPortLabel)
                    .addComponent(ServerAuthPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ServerGamePortLabel)
                    .addComponent(ServerGamePort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(SaveButton))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        String serverName = this.ServerName.getText().trim();
        String serverAddress = this.ServerAddress.getText().trim();
        String serverAuthPort = this.ServerAuthPort.getText().trim();
        String serverGamePort = this.ServerGamePort.getText().trim();
        
        if( serverName.length() == 0 ) {
            JOptionPane.showMessageDialog(this, "Please enter server name.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if( ServerEndpointManager.getInstance().getServer(serverName) != null ) {
            JOptionPane.showMessageDialog(this, "Please choose another server name. This one is in use.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if( serverAddress.length() == 0 ) {
            JOptionPane.showMessageDialog(this, "Please enter server address.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if( serverAuthPort.length() == 0 ) {
            JOptionPane.showMessageDialog(this, "Please enter server auth port.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if( serverGamePort.length() == 0 ) {
            JOptionPane.showMessageDialog(this, "Please enter server game port.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int iServerAuthPort = 0;
        try {
            iServerAuthPort = Integer.parseInt(serverAuthPort);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Server auth port is not valid.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int iServerGamePort = 0;
        try {
            iServerGamePort = Integer.parseInt(serverGamePort);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Server game port is not valid.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if( this.server == null )
            ServerEndpointManager.getInstance().addServer( 
                    new ServerEndpoint(serverName, serverAddress, iServerGamePort, iServerAuthPort) );
        else {
            ServerEndpoint server = ServerEndpointManager.getInstance().removeServer(this.server.serverName);
            server.serverName = serverName;
            server.serverAddress = serverAddress;
            server.authServerPort = iServerAuthPort;
            server.gameServerPort = iServerGamePort;
            ServerEndpointManager.getInstance().addServer(server);
        }
        
        ((ServersListDialog)this.getParent()).updateServersList();
        this.dispose();
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField ServerAddress;
    private javax.swing.JLabel ServerAddressLabel;
    private javax.swing.JTextField ServerAuthPort;
    private javax.swing.JLabel ServerAuthPortLabel;
    private javax.swing.JTextField ServerGamePort;
    private javax.swing.JLabel ServerGamePortLabel;
    private javax.swing.JTextField ServerName;
    private javax.swing.JLabel ServerNameLabel;
    // End of variables declaration//GEN-END:variables
    
    private ServerEndpoint server;
}
